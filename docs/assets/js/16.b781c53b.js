(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{262:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常用命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令行"}},[t._v("#")]),t._v(" 常用命令行")]),t._v(" "),a("h2",{attrs:{id:"git-基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-基本操作"}},[t._v("#")]),t._v(" Git 基本操作")]),t._v(" "),a("h3",{attrs:{id:"获取与创建项目命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取与创建项目命令"}},[t._v("#")]),t._v(" 获取与创建项目命令")]),t._v(" "),a("h4",{attrs:{id:"git-init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-init"}},[t._v("#")]),t._v(" git init")]),t._v(" "),a("p",[t._v("用 git init 在目录中创建新的 Git 仓库。 你可以在任何时候、 任何目录中这么做， 完全是本地化的。\n在目录中执行 git init, 就可以创建一个 Git 仓库了。 比如我们创建 runoob 项目：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" runoob\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" runoob/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\nInitialized empty Git repository "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /Users/tianqixin/www/runoob/.git/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 /www/runoob/.git/ 目录初始化空 Git 仓库完毕。")]),t._v("\n")])])]),a("h4",{attrs:{id:"git-clone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[t._v("#")]),t._v(" git clone")]),t._v(" "),a("p",[t._v("使用 git clone 拷贝一个 Git 仓库到本地， 让自己能够查看该项目， 或者进行修改。\n如果你需要与他人合作一个项目， 或者想要复制一个项目， 看看代码， 你就可以克隆那个项目。 执行命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(" $ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:schacon/simplegit.git\nCloning into "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'simplegit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nremote: Counting objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(", done.\nremote: Total "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", reused "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", pack-reused "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\nReceiving objects: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("/13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nResolving deltas: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nChecking connectivity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". done.\n")])])]),a("h3",{attrs:{id:"基本快照"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本快照"}},[t._v("#")]),t._v(" 基本快照")]),t._v(" "),a("h4",{attrs:{id:"git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),a("p",[t._v("git add 命令可将该文件添加到缓存， 如我们添加以下两个文件：")]),t._v(" "),a("div",{staticClass:"language-nash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ touch README\n$ touch hello.php\n$ ls\nREADME        hello.php\n$ git status -s\n?? README\n?? hello.php\n$ \n")])])]),a("p",[t._v("git status 命令用于查看项目的当前状态。\n接下来我们执行 git add 命令来添加文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README hello.php \n")])])]),a("p",[t._v("现在我们再执行 git status, 就可以看到这两个文件已经加上去了。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nA  README\nA  hello.php\n$ \n")])])]),a("p",[t._v("新项目中， 添加所有文件很普遍， 我们可以使用 git add . 命令来添加当前项目的所有文件。\n现在我们修改 README 文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" README\n")])])]),a("p",[t._v("在 README 添加以下内容： # Runoob Git 测试， 然后保存退出。\n再执行一下 git status:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nAM README\nA  hello.php\n")])])]),a("p",[t._v('"AM" 状态的意思是， 这个文件在我们将它添加到缓存之后又有改动。 改动后我们再执行 git add 命令将其添加到缓存中：')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nA  README\nA  hello.php\n")])])]),a("p",[t._v("当你要将你的修改包含在即将提交的快照里的时候， 需要执行 git add.")]),t._v(" "),a("h4",{attrs:{id:"git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),a("p",[t._v("git status 以查看在你上次提交之后是否有修改。")]),t._v(" "),a("p",[t._v("我演示该命令的时候加了 -s 参数， 以获得简短的结果输出。 如果没加该参数会详细输出内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\n\nInitial commit\n\nChanges to be committed:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    new file:   README\n    new file:   hello.php\n")])])]),a("h4",{attrs:{id:"git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),a("p",[t._v("执行 git diff 来查看执行 git status 的结果的详细信息。\ngit diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。 git diff 有两个主要的应用场景。")]),t._v(" "),a("h5",{attrs:{id:"尚未缓存的改动：-git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尚未缓存的改动：-git-diff"}},[t._v("#")]),t._v(" 尚未缓存的改动： git diff")]),t._v(" "),a("h5",{attrs:{id:"查看已缓存的改动：-git-diff-cached"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看已缓存的改动：-git-diff-cached"}},[t._v("#")]),t._v(" 查看已缓存的改动： git diff --cached")]),t._v(" "),a("h5",{attrs:{id:"查看已缓存的与未缓存的所有改动：-git-diff-head"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看已缓存的与未缓存的所有改动：-git-diff-head"}},[t._v("#")]),t._v(" 查看已缓存的与未缓存的所有改动： git diff HEAD")]),t._v(" "),a("h5",{attrs:{id:"显示摘要而非整个-diff-git-diff-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示摘要而非整个-diff-git-diff-stat"}},[t._v("#")]),t._v(" 显示摘要而非整个 diff: git diff --stat")]),t._v(" "),a("p",[t._v("在 hello.php 文件中输入以下内容：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nA  README\nAM hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/hello.php b/hello.php\nindex e69de29"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("69b5711 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/hello.php\n+++ b/hello.php\n@@ -0,0 +1,3 @@\n+"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n+echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("git status 显示你上次提交更新后的更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。\n接下来我们来查看下 git diff --cached 的执行效果：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" hello.php \n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nA  README\nA  hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/README b/README\nnew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\nindex 0000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("8f87495\n--- /dev/null\n+++ b/README\n@@ -0,0 +1 @@\n+"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Runoob Git 测试")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/hello.php b/hello.php\nnew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\nindex 0000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("69b5711\n--- /dev/null\n+++ b/hello.php\n@@ -0,0 +1,3 @@\n+"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n+echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("p",[t._v("使用 git add 命令将想要快照的内容写入缓存区， 而执行 git commit 将缓存区内容添加到仓库中。\nGit 为你的每一个提交都记录你的名字与电子邮箱地址， 所以第一步需要配置用户名和邮箱地址。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email test@runoob.com\n")])])]),a("p",[t._v("接下来我们写入缓存， 并提交对 hello.php 的所有改动。 在首个例子中， 我们使用 -m 选项以在命令行中提供提交注释。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nA  README\nA  hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一次版本提交'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" d32cf1f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 第一次版本提交\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" files changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" README\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" hello.php\n")])])]),a("p",[t._v("现在我们已经记录了快照。 如果我们再执行 git status:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\nnothing to commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("working directory clean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("以上输出说明我们在最近一次提交之后， 没有做任何改动， 是一个“working directory clean: 干净的工作目录“。\n如果你没有设置 -m 选项， Git 会尝试为你打开一个编辑器以填写提交信息。 如果 Git 在你对它的配置中找不到相关信息， 默认会打开 vim. 屏幕会像这样：")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("# Please enter the commit message "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" your "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("changes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" Lines starting\n# with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),t._v(" will "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("be")]),t._v(" ignored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" and an empty message aborts the commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("\n# On branch master\n# Changes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("be")]),t._v(" committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n#   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" unstage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n#\n# "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("modified")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("php\n#\n~\n~\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".git/COMMIT_EDITMSG"')]),t._v(" 9L"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 257C\n")])])]),a("p",[t._v("如果你觉得 git add 提交缓存的流程太过繁琐， Git 也允许你用 -a 选项跳过这一步。 命令格式如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a\n")])])]),a("p",[t._v("我们先修改 hello.php 文件为以下内容：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("再执行以下命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改 hello.php 文件'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master 71ee2cb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 修改 hello.php 文件\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"git-reset-head"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-head"}},[t._v("#")]),t._v(" git reset HEAD")]),t._v(" "),a("p",[t._v("git reset HEAD 命令用于取消已缓存的内容。\n我们先改动文件 README 文件， 内容如下：")]),t._v(" "),a("div",{staticClass:"language-README extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Runoob Git 测试 \n")])])]),a("p",[t._v("hello.php 文件修改为：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'菜鸟教程：www.runoob.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("现在两个文件修改后， 都提交到了缓存区， 我们现在要取消其中一个的缓存， 操作如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\n M README\n M hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nM  README\nM  hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD hello.php \nUnstaged changes after reset:\nM    hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nM  README\n M hello.php\n")])])]),a("p",[t._v("现在你执行 git commit, 只会将 README 文件的改动提交， 而 hello.php 是没有的。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master f50cfda"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 修改\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\n M hello.php\n")])])]),a("p",[t._v("可以看到 hello.php 文件的修改并未提交。\n这时我们可以使用以下命令将 hello.php 的修改提交：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改 hello.php 文件'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master 760f74d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 修改 hello.php 文件\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nnothing to commit, working directory clean\n")])])]),a("p",[t._v("简而言之， 执行 git reset HEAD 以取消之前 git add 添加， 但不希望包含在下一提交快照中的缓存。")]),t._v(" "),a("h4",{attrs:{id:"git-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rm"}},[t._v("#")]),t._v(" git rm")]),t._v(" "),a("p",[t._v("如果只是简单地从工作目录中手工删除文件， 运行 git status 时就会在 Changes not staged for commit 的提示。\n要从 Git 中移除某个文件， 就必须要从已跟踪文件清单中移除， 然后提交。 可以用以下命令完成此项工作")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("如果删除之前修改过并且已经放到暂存区域的话， 则必须要用强制删除选项 -f")]),t._v(" "),a("div",{staticClass:"language-nash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git rm -f <file>\n")])])]),a("p",[t._v("如果把文件从暂存区域移除， 但仍然希望保留在当前工作目录中， 换句话说， 仅是从跟踪清单中删除， 使用 --cached 选项即可")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("如我们删除 hello.php文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" hello.php \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello.php'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME\n")])])]),a("p",[t._v("不从工作区中删除文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached README \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'README'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME\n")])])]),a("p",[t._v("可以递归删除， 即如果后面跟的是一个目录做为参数， 则会递归删除整个目录中的所有子目录和文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" –r * \n")])])]),a("p",[t._v("进入某个目录中， 执行此语句， 会删除该目录下的所有文件和子目录。")]),t._v(" "),a("h4",{attrs:{id:"git-mv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-mv"}},[t._v("#")]),t._v(" git mv")]),t._v(" "),a("p",[t._v("git mv 命令用于移动或重命名一个文件、 目录、 软连接。")]),t._v(" "),a("p",[t._v("我们先把刚移除的 README 添加回来：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README \n")])])]),a("p",[t._v("然后对其重名：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" README  README.md\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME.md\n")])])]),a("h2",{attrs:{id:"git-分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-分支管理"}},[t._v("#")]),t._v(" Git 分支管理")]),t._v(" "),a("p",[t._v("创建分支命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("切换分支命令:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("合并分支命令:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge \n")])])]),a("p",[t._v("你可以多次合并到统一分支， 也可以选择在合并之后直接删除被并入的分支。\n开始前我们先创建一个测试目录：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" gitdemo\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" gitdemo/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\nInitialized empty Git repository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" README\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一次版本提交'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 3b58100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 第一次版本提交\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" README\n")])])]),a("p",[t._v("列出分支基本命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n")])])]),a("p",[t._v("没有参数时，git branch 会列出你在本地的分支。\n如果我们要手动创建一个分支。执行 git branch (branchname) 即可。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch testing\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n  testing\n")])])]),a("p",[t._v("现在我们可以看到，有了一个新分支 testing。\n当你以此方式在上次提交更新之后创建了新分支，如果后来又有更新提交， 然后又切换到了 testing 分支，Git 将还原你的工作目录到你创建分支时候的样子。\n接下来我们将演示如何切换分支，我们用 git checkout (branch) 切换到我们要修改的分支。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add test.txt'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master 3e92c19"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" test.txt\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout testing\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'testing'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME\n")])])]),a("p",[t._v("当我们切换到 testing 分支的时候，我们添加的新文件 test.txt 被移除了。切换回 master 分支的时候，它们有重新出现了。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        test.txt\n")])])]),a("p",[t._v("我们也可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b newtest\nSwitched to a new branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newtest'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" test.txt \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.txt'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" hello.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'removed test.txt、add runoob.php'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newtest c1501a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" removed test.txt、add runoob.php\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" files changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" deletion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" runoob.php\n delete mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        test.txt\n")])])]),a("p",[t._v("如你所见，我们创建了一个分支，在该分支的上移除了一些文件 test.txt，并添加了 runoob.php 文件，然后切换回我们的主分支，删除的 test.txt 文件又回来了，且新增加的 runoob.php 不存在主分支中。\n使用分支将工作切分开来，从而让我们能够在不同开发环境中做事，并来回切换。")]),t._v(" "),a("h3",{attrs:{id:"删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),a("p",[t._v("删除分支命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("例如我们要删除 testing 分支：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n  testing\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d testing\nDeleted branch testing "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("was 85fc7e7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n")])])]),a("h3",{attrs:{id:"分支合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[t._v("#")]),t._v(" 分支合并")]),t._v(" "),a("p",[t._v("一旦某分支有了独立内容，你终究会希望将它合并回到你的主分支。 你可以使用以下命令将任何分支合并到当前分支中去：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n  newtest\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge newtest\nUpdating 3e92c19"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("c1501a2\nFast-forward\n runoob.php "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n test.txt   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" -\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" files changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" deletion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" runoob.php\n delete mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nREADME        runoob.php\n")])])]),a("p",[t._v("以上实例中我们将 newtest 分支合并到主分支去，test.txt 文件被删除。\n合并完后就可以删除分支:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d newtest\nDeleted branch newtest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("was c1501a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n")])])]),a("p",[t._v("删除后， 就只剩下 master 分支了：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n")])])]),a("h3",{attrs:{id:"合并冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突"}},[t._v("#")]),t._v(" 合并冲突")]),t._v(" "),a("p",[t._v("合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n* master\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" runoob.php\n")])])]),a("p",[t._v("首先，我们创建一个叫做 change_site 的分支，切换过去，我们将 runoob.php 内容改为:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'runoob'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("创建 change_site 分支：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b change_site\nSwitched to a new branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change_site'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" -3 runoob.php\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'changed the runoob.php'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("change_site "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7774248")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" changed the runoob.php\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("将修改的内容提交到 change_site 分支中。 现在，假如切换回 master 分支我们可以看内容恢复到我们修改前的(空文件，没有代码)，我们再次修改 runoob.php 文件。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" runoob.php    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改内容如下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" runoob.php\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/runoob.php b/runoob.php\nindex e69de29"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("ac60739 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/runoob.php\n+++ b/runoob.php\n@@ -0,0 +1,3 @@\n+"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n+echo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改代码'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master c68142b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 修改代码\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v('现在这些改变已经记录到我的 "master" 分支了。接下来我们将 "change_site" 分支合并过来。')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge change_site\nAuto-merging runoob.php\nCONFLICT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" runoob.php\nAutomatic merge failed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fix conflicts and "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" commit the result.\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" runoob.php     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代开文件，看到冲突内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" HEAD\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" change_site\n?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("我们将前一个分支合并到 master 分支，一个合并冲突就出现了，接下来我们需要手动去修改它。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" runoob.php \n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" runoob.php\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cc runoob.php\nindex ac60739,b63d7d7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("0000000\n--- a/runoob.php\n+++ b/runoob.php\n@@@ -1,3 -1,3 +1,4 @@@\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n +echo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("在 Git 中，我们可以用 git add 要告诉 Git 文件冲突已经解决")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nUU runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\nM  runoob.php\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master 88afe0e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Merge branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change_site'")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);